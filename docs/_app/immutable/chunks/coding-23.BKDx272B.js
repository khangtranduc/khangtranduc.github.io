import{a as l,t as p}from"./disclose-version.gCkiB1NA.js";import"./legacy.BBWxuCkZ.js";import{L as o,M as e}from"./runtime.DIMTQvhB.js";import{h as t}from"./html.BSu0e-bj.js";const y={title:"coding-23",description:"UVa - armybuddies",date:"2025-06-22T00:00:00.000Z",tags:["daily-coding"],published:!0};var r=p('<h2>UVa – armybuddies</h2> <p>Two book-keeping arrays for whose to the left and right. Initially used linear scans, got idea from viewing <a href="https://github.com/ackoroa/UVa-Solutions/blob/master/UVa%2012356%20-%20Army%20Buddies/src/UVa%2012356%20-%20Army%20Buddies.cpp" rel="nofollow">ackoroa</a>’s solution.</p> <h2>my solution</h2> <!>',1);function i(a){var s=r(),n=o(e(s),6);t(n,()=>`<pre class="shiki poimandres" style="background-color:#1b1e28;color:#a6accd" tabindex="0"><code><span class="line"><span style="color:#A6ACCD">#include </span><span style="color:#A6ACCD">&#x3C;</span><span style="color:#5DE4C7">bits/stdc++.h</span><span style="color:#A6ACCD">></span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#5DE4C7">using</span><span style="color:#91B4D5"> namespace</span><span style="color:#91B4D5"> std</span><span style="color:#A6ACCD">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#91B4D5">int</span><span style="color:#ADD7FF"> main</span><span style="color:#A6ACCD">() &#123;</span></span>
<span class="line"><span style="color:#91B4D5">	int</span><span style="color:#A6ACCD"> s, b, </span><span style="color:#E4F0FB">left</span><span style="color:#A6ACCD">[</span><span style="color:#5DE4C7">100005</span><span style="color:#A6ACCD">], </span><span style="color:#E4F0FB">right</span><span style="color:#A6ACCD">[</span><span style="color:#5DE4C7">100005</span><span style="color:#A6ACCD">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD">	while(</span><span style="color:#ADD7FF">scanf</span><span style="color:#A6ACCD">(</span><span style="color:#A6ACCD">"</span><span style="color:#E4F0FB">%d</span><span style="color:#E4F0FB"> %d</span><span style="color:#A6ACCD">"</span><span style="color:#A6ACCD">, </span><span style="color:#91B4D5">&#x26;</span><span style="color:#A6ACCD">s, </span><span style="color:#91B4D5">&#x26;</span><span style="color:#A6ACCD">b), s </span><span style="color:#91B4D5">||</span><span style="color:#A6ACCD"> b) &#123;</span></span>
<span class="line"><span style="color:#91B4D5">		int</span><span style="color:#ADD7FF"> dead</span><span style="color:#A6ACCD">[s] </span><span style="color:#91B4D5">=</span><span style="color:#A6ACCD"> &#123;&#125;, l, r;</span></span>
<span class="line"><span style="color:#A6ACCD">		for (</span><span style="color:#91B4D5">int</span><span style="color:#A6ACCD"> i </span><span style="color:#91B4D5">=</span><span style="color:#5DE4C7"> 1</span><span style="color:#A6ACCD">; i </span><span style="color:#91B4D5">&#x3C;=</span><span style="color:#A6ACCD"> s; i</span><span style="color:#91B4D5">++</span><span style="color:#A6ACCD">) &#123;</span></span>
<span class="line"><span style="color:#ADD7FF">			left</span><span style="color:#A6ACCD">[i] </span><span style="color:#91B4D5">=</span><span style="color:#A6ACCD"> i </span><span style="color:#91B4D5">-</span><span style="color:#5DE4C7"> 1</span><span style="color:#A6ACCD">;</span></span>
<span class="line"><span style="color:#ADD7FF">			right</span><span style="color:#A6ACCD">[i] </span><span style="color:#91B4D5">=</span><span style="color:#A6ACCD"> i </span><span style="color:#91B4D5">+</span><span style="color:#5DE4C7"> 1</span><span style="color:#A6ACCD">;</span></span>
<span class="line"><span style="color:#A6ACCD">		&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD">		while (b</span><span style="color:#91B4D5">--</span><span style="color:#A6ACCD">) &#123;</span></span>
<span class="line"><span style="color:#ADD7FF">			scanf</span><span style="color:#A6ACCD">(</span><span style="color:#A6ACCD">"</span><span style="color:#E4F0FB">%d</span><span style="color:#E4F0FB"> %d</span><span style="color:#A6ACCD">"</span><span style="color:#A6ACCD">, </span><span style="color:#91B4D5">&#x26;</span><span style="color:#A6ACCD">l, </span><span style="color:#91B4D5">&#x26;</span><span style="color:#A6ACCD">r);		</span></span>
<span class="line"><span style="color:#ADD7FF">			left</span><span style="color:#A6ACCD">[</span><span style="color:#ADD7FF">right</span><span style="color:#A6ACCD">[r]] </span><span style="color:#91B4D5">=</span><span style="color:#ADD7FF"> left</span><span style="color:#A6ACCD">[l];</span></span>
<span class="line"><span style="color:#ADD7FF">			right</span><span style="color:#A6ACCD">[</span><span style="color:#ADD7FF">left</span><span style="color:#A6ACCD">[l]] </span><span style="color:#91B4D5">=</span><span style="color:#ADD7FF"> right</span><span style="color:#A6ACCD">[r];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD">			if (</span><span style="color:#ADD7FF">left</span><span style="color:#A6ACCD">[l] </span><span style="color:#91B4D5">&#x3C;</span><span style="color:#5DE4C7"> 1</span><span style="color:#A6ACCD">) </span><span style="color:#ADD7FF">printf</span><span style="color:#A6ACCD">(</span><span style="color:#A6ACCD">"</span><span style="color:#5DE4C7">*</span><span style="color:#A6ACCD">"</span><span style="color:#A6ACCD">);</span></span>
<span class="line"><span style="color:#A6ACCD">			else </span><span style="color:#ADD7FF">printf</span><span style="color:#A6ACCD">(</span><span style="color:#A6ACCD">"</span><span style="color:#E4F0FB">%d</span><span style="color:#A6ACCD">"</span><span style="color:#A6ACCD">, </span><span style="color:#ADD7FF">left</span><span style="color:#A6ACCD">[l]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD">			if (</span><span style="color:#ADD7FF">right</span><span style="color:#A6ACCD">[r] </span><span style="color:#91B4D5">></span><span style="color:#A6ACCD"> s) </span><span style="color:#ADD7FF">printf</span><span style="color:#A6ACCD">(</span><span style="color:#A6ACCD">"</span><span style="color:#5DE4C7"> *</span><span style="color:#5FB3A1">&#92;n</span><span style="color:#A6ACCD">"</span><span style="color:#A6ACCD">);</span></span>
<span class="line"><span style="color:#A6ACCD">			else </span><span style="color:#ADD7FF">printf</span><span style="color:#A6ACCD">(</span><span style="color:#A6ACCD">"</span><span style="color:#E4F0FB"> %d</span><span style="color:#5FB3A1">&#92;n</span><span style="color:#A6ACCD">"</span><span style="color:#A6ACCD">, </span><span style="color:#ADD7FF">right</span><span style="color:#A6ACCD">[r]);</span></span>
<span class="line"><span style="color:#A6ACCD">		&#125;</span></span>
<span class="line"><span style="color:#ADD7FF">		puts</span><span style="color:#A6ACCD">(</span><span style="color:#A6ACCD">"</span><span style="color:#5DE4C7">-</span><span style="color:#A6ACCD">"</span><span style="color:#A6ACCD">);</span></span>
<span class="line"><span style="color:#A6ACCD">	&#125; </span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD">&#125;</span></span></code></pre>`),l(a,s)}export{i as default,y as metadata};
