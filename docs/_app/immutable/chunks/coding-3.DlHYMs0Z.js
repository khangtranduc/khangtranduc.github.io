import{a as l,t as p}from"./disclose-version.yFYzY67q.js";import"./legacy.CQzi9stk.js";import{i as o,j as e}from"./runtime.DNrlAA3c.js";import{h as t}from"./html.gT-yHAVe.js";const A={title:"coding-3",description:"Kattis - rings2",date:"2024-12-29T00:00:00.000Z",tags:null,published:!0};var c=p("<h2>Kattis â€“ rings2</h2> <p>Quite a tricky problem, I wasnâ€™t used to 2D arrays so it took a while heckling with the <code>C++</code>syntax. Additionally, I also wasnâ€™t used to algorithms whose running time depends on the number of rings ðŸ˜… (I just automatically discounted that as inefficient), perhaps there is a better algorithms.</p> <p>I also missed yesterday :((.</p> <p>In any case, <strong>my solution is:</strong></p> <!>",1);function i(n){var s=c(),a=o(e(s),8);t(a,()=>`<pre class="shiki poimandres" style="background-color:#1b1e28;color:#a6accd" tabindex="0"><code><span class="line"><span style="color:#A6ACCD">#include </span><span style="color:#A6ACCD">&#x3C;</span><span style="color:#5DE4C7">bits/stdc++.h</span><span style="color:#A6ACCD">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#5DE4C7">using</span><span style="color:#91B4D5"> namespace</span><span style="color:#91B4D5"> std</span><span style="color:#A6ACCD">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#91B4D5">int</span><span style="color:#ADD7FF"> main</span><span style="color:#A6ACCD">() &#123;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#91B4D5">    int</span><span style="color:#A6ACCD"> rows, cols;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADD7FF">    scanf</span><span style="color:#A6ACCD">(</span><span style="color:#A6ACCD">"</span><span style="color:#E4F0FB">%u</span><span style="color:#E4F0FB"> %u</span><span style="color:#A6ACCD">"</span><span style="color:#A6ACCD">, </span><span style="color:#91B4D5">&#x26;</span><span style="color:#A6ACCD">rows, </span><span style="color:#91B4D5">&#x26;</span><span style="color:#A6ACCD">cols);</span></span>
<span class="line"><span style="color:#A6ACCD">    </span></span>
<span class="line"><span style="color:#91B4D5">    int</span><span style="color:#E4F0FB"> grid</span><span style="color:#A6ACCD">[rows </span><span style="color:#91B4D5">+</span><span style="color:#5DE4C7"> 2</span><span style="color:#A6ACCD">][cols </span><span style="color:#91B4D5">+</span><span style="color:#5DE4C7"> 2</span><span style="color:#A6ACCD">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD">    for (</span><span style="color:#91B4D5">int</span><span style="color:#A6ACCD"> i </span><span style="color:#91B4D5">=</span><span style="color:#5DE4C7"> 0</span><span style="color:#A6ACCD">; i </span><span style="color:#91B4D5">&#x3C;</span><span style="color:#A6ACCD"> rows </span><span style="color:#91B4D5">+</span><span style="color:#5DE4C7"> 2</span><span style="color:#A6ACCD">; i</span><span style="color:#91B4D5">++</span><span style="color:#A6ACCD">) &#123;</span></span>
<span class="line"><span style="color:#ADD7FF">        grid</span><span style="color:#A6ACCD">[i][</span><span style="color:#5DE4C7">0</span><span style="color:#A6ACCD">] </span><span style="color:#91B4D5">=</span><span style="color:#5DE4C7"> false</span><span style="color:#A6ACCD">;</span></span>
<span class="line"><span style="color:#ADD7FF">        grid</span><span style="color:#A6ACCD">[i][cols </span><span style="color:#91B4D5">+</span><span style="color:#5DE4C7"> 1</span><span style="color:#A6ACCD">] </span><span style="color:#91B4D5">=</span><span style="color:#5DE4C7"> false</span><span style="color:#A6ACCD">;</span></span>
<span class="line"><span style="color:#A6ACCD">    &#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD">    for (</span><span style="color:#91B4D5">int</span><span style="color:#A6ACCD"> j </span><span style="color:#91B4D5">=</span><span style="color:#5DE4C7"> 0</span><span style="color:#A6ACCD">; j </span><span style="color:#91B4D5">&#x3C;</span><span style="color:#A6ACCD"> cols </span><span style="color:#91B4D5">+</span><span style="color:#5DE4C7"> 2</span><span style="color:#A6ACCD">; j</span><span style="color:#91B4D5">++</span><span style="color:#A6ACCD">) &#123;</span></span>
<span class="line"><span style="color:#ADD7FF">        grid</span><span style="color:#A6ACCD">[</span><span style="color:#5DE4C7">0</span><span style="color:#A6ACCD">][j] </span><span style="color:#91B4D5">=</span><span style="color:#5DE4C7"> false</span><span style="color:#A6ACCD">;</span></span>
<span class="line"><span style="color:#ADD7FF">        grid</span><span style="color:#A6ACCD">[rows </span><span style="color:#91B4D5">+</span><span style="color:#5DE4C7"> 1</span><span style="color:#A6ACCD">][j] </span><span style="color:#91B4D5">=</span><span style="color:#5DE4C7"> false</span><span style="color:#A6ACCD">;</span></span>
<span class="line"><span style="color:#A6ACCD">    &#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD">    for (</span><span style="color:#91B4D5">int</span><span style="color:#A6ACCD"> i </span><span style="color:#91B4D5">=</span><span style="color:#5DE4C7"> 1</span><span style="color:#A6ACCD">; i </span><span style="color:#91B4D5">&#x3C;</span><span style="color:#A6ACCD"> rows </span><span style="color:#91B4D5">+</span><span style="color:#5DE4C7"> 1</span><span style="color:#A6ACCD">; i</span><span style="color:#91B4D5">++</span><span style="color:#A6ACCD">) &#123;</span></span>
<span class="line"><span style="color:#A6ACCD">        for (</span><span style="color:#91B4D5">int</span><span style="color:#A6ACCD"> j </span><span style="color:#91B4D5">=</span><span style="color:#5DE4C7"> 1</span><span style="color:#A6ACCD">; j </span><span style="color:#91B4D5">&#x3C;</span><span style="color:#A6ACCD"> cols </span><span style="color:#91B4D5">+</span><span style="color:#5DE4C7"> 1</span><span style="color:#A6ACCD">; j</span><span style="color:#91B4D5">++</span><span style="color:#A6ACCD">) &#123;</span></span>
<span class="line"><span style="color:#91B4D5">            char</span><span style="color:#A6ACCD"> a;</span></span>
<span class="line"><span style="color:#ADD7FF">            scanf</span><span style="color:#A6ACCD">(</span><span style="color:#A6ACCD">"</span><span style="color:#E4F0FB"> %c</span><span style="color:#A6ACCD">"</span><span style="color:#A6ACCD">, </span><span style="color:#91B4D5">&#x26;</span><span style="color:#A6ACCD">a);</span></span>
<span class="line"><span style="color:#ADD7FF">            grid</span><span style="color:#A6ACCD">[i][j] </span><span style="color:#91B4D5">=</span><span style="color:#A6ACCD"> (a </span><span style="color:#91B4D5">==</span><span style="color:#A6ACCD"> '</span><span style="color:#5DE4C7">T</span><span style="color:#A6ACCD">'</span><span style="color:#A6ACCD">);</span></span>
<span class="line"><span style="color:#A6ACCD">        &#125;</span></span>
<span class="line"><span style="color:#A6ACCD">    &#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#767C9DB0;font-style:italic">    // Idea: scan through whole thing, everything is 1 initially</span></span>
<span class="line"><span style="color:#767C9DB0;font-style:italic">    // Anything not touching edge becomes 2</span></span>
<span class="line"><span style="color:#767C9DB0;font-style:italic">    // Anything not touching one becomes 3 and so on</span></span>
<span class="line"></span>
<span class="line"><span style="color:#91B4D5">    int</span><span style="color:#A6ACCD"> count, nb </span><span style="color:#91B4D5">=</span><span style="color:#5DE4C7"> 0</span><span style="color:#A6ACCD">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD">    do &#123;</span></span>
<span class="line"><span style="color:#A6ACCD">        count </span><span style="color:#91B4D5">=</span><span style="color:#5DE4C7"> 0</span><span style="color:#A6ACCD">;</span></span>
<span class="line"><span style="color:#A6ACCD">        for (</span><span style="color:#91B4D5">int</span><span style="color:#A6ACCD"> i </span><span style="color:#91B4D5">=</span><span style="color:#5DE4C7"> 1</span><span style="color:#A6ACCD">; i </span><span style="color:#91B4D5">&#x3C;</span><span style="color:#A6ACCD"> rows </span><span style="color:#91B4D5">+</span><span style="color:#5DE4C7"> 1</span><span style="color:#A6ACCD">; i</span><span style="color:#91B4D5">++</span><span style="color:#A6ACCD">) &#123;</span></span>
<span class="line"><span style="color:#A6ACCD">            for (</span><span style="color:#91B4D5">int</span><span style="color:#A6ACCD"> j </span><span style="color:#91B4D5">=</span><span style="color:#5DE4C7"> 1</span><span style="color:#A6ACCD">; j </span><span style="color:#91B4D5">&#x3C;</span><span style="color:#A6ACCD"> cols </span><span style="color:#91B4D5">+</span><span style="color:#5DE4C7"> 1</span><span style="color:#A6ACCD">; j</span><span style="color:#91B4D5">++</span><span style="color:#A6ACCD">) &#123;</span></span>
<span class="line"><span style="color:#91B4D5">                bool</span><span style="color:#A6ACCD"> neihbouring </span><span style="color:#91B4D5">=</span><span style="color:#ADD7FF"> grid</span><span style="color:#A6ACCD">[i][j </span><span style="color:#91B4D5">-</span><span style="color:#5DE4C7"> 1</span><span style="color:#A6ACCD">] </span><span style="color:#91B4D5">&#x3C;=</span><span style="color:#A6ACCD"> nb </span></span>
<span class="line"><span style="color:#91B4D5">	                ||</span><span style="color:#ADD7FF"> grid</span><span style="color:#A6ACCD">[i][j </span><span style="color:#91B4D5">+</span><span style="color:#5DE4C7"> 1</span><span style="color:#A6ACCD">] </span><span style="color:#91B4D5">&#x3C;=</span><span style="color:#A6ACCD"> nb </span></span>
<span class="line"><span style="color:#91B4D5">	                ||</span><span style="color:#ADD7FF"> grid</span><span style="color:#A6ACCD">[i </span><span style="color:#91B4D5">-</span><span style="color:#5DE4C7"> 1</span><span style="color:#A6ACCD">][j] </span><span style="color:#91B4D5">&#x3C;=</span><span style="color:#A6ACCD"> nb </span></span>
<span class="line"><span style="color:#91B4D5">	                ||</span><span style="color:#ADD7FF"> grid</span><span style="color:#A6ACCD">[i </span><span style="color:#91B4D5">+</span><span style="color:#5DE4C7"> 1</span><span style="color:#A6ACCD">][j] </span><span style="color:#91B4D5">&#x3C;=</span><span style="color:#A6ACCD"> nb;</span></span>
<span class="line"><span style="color:#A6ACCD">                if (</span><span style="color:#ADD7FF">grid</span><span style="color:#A6ACCD">[i][j] </span><span style="color:#91B4D5">&#x26;&#x26;</span><span style="color:#91B4D5"> !</span><span style="color:#A6ACCD">neihbouring) &#123;</span></span>
<span class="line"><span style="color:#ADD7FF">                    grid</span><span style="color:#A6ACCD">[i][j] </span><span style="color:#91B4D5">=</span><span style="color:#A6ACCD"> nb </span><span style="color:#91B4D5">+</span><span style="color:#5DE4C7"> 2</span><span style="color:#A6ACCD">;</span></span>
<span class="line"><span style="color:#A6ACCD">                    count </span><span style="color:#91B4D5">+=</span><span style="color:#5DE4C7"> 1</span><span style="color:#A6ACCD">;</span></span>
<span class="line"><span style="color:#A6ACCD">                &#125;</span></span>
<span class="line"><span style="color:#A6ACCD">            &#125;</span></span>
<span class="line"><span style="color:#A6ACCD">        &#125;</span></span>
<span class="line"><span style="color:#A6ACCD">        nb </span><span style="color:#91B4D5">+=</span><span style="color:#5DE4C7"> 1</span><span style="color:#A6ACCD">;</span></span>
<span class="line"><span style="color:#A6ACCD">    &#125; while (count </span><span style="color:#91B4D5">></span><span style="color:#5DE4C7"> 0</span><span style="color:#A6ACCD">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#91B4D5">    bool</span><span style="color:#A6ACCD"> twos </span><span style="color:#91B4D5">=</span><span style="color:#A6ACCD"> nb </span><span style="color:#91B4D5">&#x3C;</span><span style="color:#5DE4C7"> 10</span><span style="color:#A6ACCD">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD">    for (</span><span style="color:#91B4D5">int</span><span style="color:#A6ACCD"> i </span><span style="color:#91B4D5">=</span><span style="color:#5DE4C7"> 1</span><span style="color:#A6ACCD">; i </span><span style="color:#91B4D5">&#x3C;</span><span style="color:#A6ACCD"> rows </span><span style="color:#91B4D5">+</span><span style="color:#5DE4C7"> 1</span><span style="color:#A6ACCD">; i</span><span style="color:#91B4D5">++</span><span style="color:#A6ACCD">) &#123;</span></span>
<span class="line"><span style="color:#A6ACCD">        for (</span><span style="color:#91B4D5">int</span><span style="color:#A6ACCD"> j </span><span style="color:#91B4D5">=</span><span style="color:#5DE4C7"> 1</span><span style="color:#A6ACCD">; j </span><span style="color:#91B4D5">&#x3C;</span><span style="color:#A6ACCD"> cols </span><span style="color:#91B4D5">+</span><span style="color:#5DE4C7"> 1</span><span style="color:#A6ACCD">; j</span><span style="color:#91B4D5">++</span><span style="color:#A6ACCD">) &#123;</span></span>
<span class="line"><span style="color:#A6ACCD">            string to_print </span><span style="color:#91B4D5">=</span><span style="color:#ADD7FF"> grid</span><span style="color:#A6ACCD">[i][j] </span><span style="color:#91B4D5">?</span><span style="color:#ADD7FF"> to_string</span><span style="color:#A6ACCD">(</span><span style="color:#ADD7FF">grid</span><span style="color:#A6ACCD">[i][j]) </span><span style="color:#91B4D5">:</span><span style="color:#A6ACCD"> ""</span><span style="color:#A6ACCD">;</span></span>
<span class="line"><span style="color:#A6ACCD">            if (twos) cout </span><span style="color:#91B4D5">&#x3C;&#x3C;</span><span style="color:#ADD7FF"> setw</span><span style="color:#A6ACCD">(</span><span style="color:#5DE4C7">2</span><span style="color:#A6ACCD">) </span><span style="color:#91B4D5">&#x3C;&#x3C;</span><span style="color:#A6ACCD"> right </span><span style="color:#91B4D5">&#x3C;&#x3C;</span><span style="color:#ADD7FF"> setfill</span><span style="color:#A6ACCD">(</span><span style="color:#A6ACCD">'</span><span style="color:#5DE4C7">.</span><span style="color:#A6ACCD">'</span><span style="color:#A6ACCD">) </span><span style="color:#91B4D5">&#x3C;&#x3C;</span><span style="color:#A6ACCD"> to_print;</span></span>
<span class="line"><span style="color:#A6ACCD">            else cout </span><span style="color:#91B4D5">&#x3C;&#x3C;</span><span style="color:#ADD7FF"> setw</span><span style="color:#A6ACCD">(</span><span style="color:#5DE4C7">3</span><span style="color:#A6ACCD">) </span><span style="color:#91B4D5">&#x3C;&#x3C;</span><span style="color:#A6ACCD"> right </span><span style="color:#91B4D5">&#x3C;&#x3C;</span><span style="color:#ADD7FF"> setfill</span><span style="color:#A6ACCD">(</span><span style="color:#A6ACCD">'</span><span style="color:#5DE4C7">.</span><span style="color:#A6ACCD">'</span><span style="color:#A6ACCD">) </span><span style="color:#91B4D5">&#x3C;&#x3C;</span><span style="color:#A6ACCD"> to_print;</span></span>
<span class="line"><span style="color:#A6ACCD">        &#125;</span></span>
<span class="line"><span style="color:#ADD7FF">        printf</span><span style="color:#A6ACCD">(</span><span style="color:#A6ACCD">"</span><span style="color:#5FB3A1">&#92;n</span><span style="color:#A6ACCD">"</span><span style="color:#A6ACCD">);</span></span>
<span class="line"><span style="color:#A6ACCD">    &#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD">    return </span><span style="color:#5DE4C7">0</span><span style="color:#A6ACCD">;</span></span>
<span class="line"><span style="color:#A6ACCD">&#125;</span></span></code></pre>`),l(n,s)}export{i as default,A as metadata};
