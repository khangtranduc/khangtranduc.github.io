import{a as e,t as c}from"./disclose-version.w122s73S.js";import"./legacy.PYORki5n.js";import{L as a,M as t}from"./runtime.BcKyo7YD.js";import{h as l}from"./html.DxrNSgWl.js";const i={title:"coding-11",description:"Kattis - quickbrownfox",date:"2025-01-07T00:00:00.000Z",tags:["daily-coding"],published:!0};var r=c("<h2>Kattis â€“ quickbrownfox</h2> <p>Direct Addressing Table (DAT) problem, which essentially means hashing problem but the hash function is the <em>identity</em>. Not too bad, got to use bitmasks again.</p> <p>Ran into a hitch because implemented <code>LSOne</code> wrongly. The correct function is:</p> <!> <p>Note that the <strong>negative sign is not the <code>~</code> (LOGICAL NOT) sign</strong></p> <h2>my solution</h2> <!>",1);function B(p){var s=r(),n=a(t(s),6);l(n,()=>'<pre class="shiki poimandres" style="background-color:#1b1e28;color:#a6accd" tabindex="0"><code><span class="line"><span style="color:#A6ACCD">T </span><span style="color:#91B4D5">=</span><span style="color:#A6ACCD"> (S </span><span style="color:#91B4D5">&#x26;</span><span style="color:#91B4D5"> -</span><span style="color:#A6ACCD">S)</span></span></code></pre>');var o=a(n,6);l(o,()=>`<pre class="shiki poimandres" style="background-color:#1b1e28;color:#a6accd" tabindex="0"><code><span class="line"><span style="color:#A6ACCD">#include </span><span style="color:#A6ACCD">&#x3C;</span><span style="color:#5DE4C7">bits/stdc++.h</span><span style="color:#A6ACCD">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#5DE4C7">using</span><span style="color:#91B4D5"> namespace</span><span style="color:#91B4D5"> std</span><span style="color:#A6ACCD">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#91B4D5">int</span><span style="color:#ADD7FF"> main</span><span style="color:#A6ACCD">() &#123;</span></span>
<span class="line"><span style="color:#91B4D5">    int</span><span style="color:#A6ACCD"> n;</span></span>
<span class="line"><span style="color:#A6ACCD">    cin </span><span style="color:#91B4D5">>></span><span style="color:#A6ACCD"> n;</span></span>
<span class="line"><span style="color:#E4F0FB">    cin</span><span style="color:#A6ACCD">.</span><span style="color:#ADD7FF">ignore</span><span style="color:#A6ACCD">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD">    string s;</span></span>
<span class="line"><span style="color:#91B4D5">    uint32_t</span><span style="color:#A6ACCD"> mask;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD">    while (n</span><span style="color:#91B4D5">--</span><span style="color:#A6ACCD">) &#123;</span></span>
<span class="line"><span style="color:#ADD7FF">        getline</span><span style="color:#A6ACCD">(cin, s);</span></span>
<span class="line"><span style="color:#A6ACCD">        </span></span>
<span class="line"><span style="color:#91B4D5">        int</span><span style="color:#A6ACCD"> j </span><span style="color:#91B4D5">=</span><span style="color:#5DE4C7"> 0</span><span style="color:#A6ACCD">;</span></span>
<span class="line"><span style="color:#A6ACCD">        for (</span><span style="color:#91B4D5">int</span><span style="color:#A6ACCD"> i </span><span style="color:#91B4D5">=</span><span style="color:#5DE4C7"> 0</span><span style="color:#A6ACCD">; i </span><span style="color:#91B4D5">&#x3C;</span><span style="color:#ADD7FF"> s</span><span style="color:#A6ACCD">.</span><span style="color:#ADD7FF">size</span><span style="color:#A6ACCD">(); i</span><span style="color:#91B4D5">++</span><span style="color:#A6ACCD">)</span></span>
<span class="line"><span style="color:#A6ACCD">            if (</span><span style="color:#ADD7FF">isalpha</span><span style="color:#A6ACCD">(</span><span style="color:#ADD7FF">s</span><span style="color:#A6ACCD">[i]))</span></span>
<span class="line"><span style="color:#ADD7FF">                s</span><span style="color:#A6ACCD">[j</span><span style="color:#91B4D5">++</span><span style="color:#A6ACCD">] </span><span style="color:#91B4D5">=</span><span style="color:#ADD7FF"> s</span><span style="color:#A6ACCD">[i];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD">        for (</span><span style="color:#91B4D5">int</span><span style="color:#A6ACCD"> i </span><span style="color:#91B4D5">=</span><span style="color:#5DE4C7"> 0</span><span style="color:#A6ACCD">; i </span><span style="color:#91B4D5">&#x3C;</span><span style="color:#A6ACCD"> j; i</span><span style="color:#91B4D5">++</span><span style="color:#A6ACCD">) &#123;</span></span>
<span class="line"><span style="color:#ADD7FF">            s</span><span style="color:#A6ACCD">[i] </span><span style="color:#91B4D5">=</span><span style="color:#ADD7FF"> tolower</span><span style="color:#A6ACCD">(</span><span style="color:#ADD7FF">s</span><span style="color:#A6ACCD">[i]);</span></span>
<span class="line"><span style="color:#A6ACCD">            mask </span><span style="color:#91B4D5">|=</span><span style="color:#A6ACCD"> (</span><span style="color:#5DE4C7">1</span><span style="color:#91B4D5"> &#x3C;&#x3C;</span><span style="color:#ADD7FF"> s</span><span style="color:#A6ACCD">[i] </span><span style="color:#91B4D5">-</span><span style="color:#A6ACCD"> '</span><span style="color:#5DE4C7">a</span><span style="color:#A6ACCD">'</span><span style="color:#A6ACCD">);</span></span>
<span class="line"><span style="color:#A6ACCD">        &#125;</span></span>
<span class="line"><span style="color:#A6ACCD">        mask </span><span style="color:#91B4D5">^=</span><span style="color:#A6ACCD"> (</span><span style="color:#5DE4C7">1</span><span style="color:#91B4D5"> &#x3C;&#x3C;</span><span style="color:#5DE4C7"> 26</span><span style="color:#A6ACCD">) </span><span style="color:#91B4D5">-</span><span style="color:#5DE4C7"> 1</span><span style="color:#A6ACCD">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD">        if (</span><span style="color:#91B4D5">!</span><span style="color:#A6ACCD">mask) cout </span><span style="color:#91B4D5">&#x3C;&#x3C;</span><span style="color:#A6ACCD"> "</span><span style="color:#5DE4C7">pangram</span><span style="color:#5FB3A1">&#92;n</span><span style="color:#A6ACCD">"</span><span style="color:#A6ACCD">;</span></span>
<span class="line"><span style="color:#A6ACCD">        else &#123;</span></span>
<span class="line"><span style="color:#A6ACCD">            cout </span><span style="color:#91B4D5">&#x3C;&#x3C;</span><span style="color:#A6ACCD"> "</span><span style="color:#5DE4C7">missing </span><span style="color:#A6ACCD">"</span><span style="color:#A6ACCD">;</span></span>
<span class="line"><span style="color:#A6ACCD">            while (mask) &#123;</span></span>
<span class="line"><span style="color:#91B4D5">                uint32_t</span><span style="color:#A6ACCD"> T </span><span style="color:#91B4D5">=</span><span style="color:#A6ACCD"> mask </span><span style="color:#91B4D5">&#x26;</span><span style="color:#91B4D5"> -</span><span style="color:#A6ACCD">mask;</span><span style="color:#767C9DB0;font-style:italic"> //LSOne</span></span>
<span class="line"><span style="color:#A6ACCD">                cout </span><span style="color:#91B4D5">&#x3C;&#x3C;</span><span style="color:#A6ACCD"> (</span><span style="color:#91B4D5">char</span><span style="color:#A6ACCD">) (</span><span style="color:#A6ACCD">'</span><span style="color:#5DE4C7">a</span><span style="color:#A6ACCD">'</span><span style="color:#91B4D5"> +</span><span style="color:#ADD7FF"> __builtin_ctz</span><span style="color:#A6ACCD">(T));</span></span>
<span class="line"><span style="color:#A6ACCD">                mask </span><span style="color:#91B4D5">&#x26;=</span><span style="color:#91B4D5"> ~</span><span style="color:#A6ACCD">T;</span></span>
<span class="line"><span style="color:#A6ACCD">            &#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD">            cout </span><span style="color:#91B4D5">&#x3C;&#x3C;</span><span style="color:#A6ACCD"> "</span><span style="color:#5FB3A1">&#92;n</span><span style="color:#A6ACCD">"</span><span style="color:#A6ACCD">;</span></span>
<span class="line"><span style="color:#A6ACCD">        &#125;</span></span>
<span class="line"><span style="color:#A6ACCD">    &#125;</span></span>
<span class="line"><span style="color:#A6ACCD">&#125;</span></span></code></pre>`),e(p,s)}export{B as default,i as metadata};
